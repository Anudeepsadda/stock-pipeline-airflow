services:
  postgres:
    image: postgres:15
    container_name: sp_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10

  airflow-init:
    image: apache/airflow:2.9.2
    container_name: sp_airflow_init
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    environment:
      _PIP_ADDITIONAL_REQUIREMENTS: "requests psycopg2-binary"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/scripts:/opt/airflow/scripts
    command: >
      bash -c "airflow db init &&
      airflow users create --role Admin --username admin --password admin --firstname Admin --lastname User --email admin@example.com"

  airflow-webserver:
    image: apache/airflow:2.9.2
    container_name: sp_airflow_web
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    env_file: .env
    environment:
      _PIP_ADDITIONAL_REQUIREMENTS: "requests psycopg2-binary"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/scripts:/opt/airflow/scripts
    command: webserver
    ports:
      - "8080:8080"
    restart: always

  airflow-scheduler:
    image: apache/airflow:2.9.2
    container_name: sp_airflow_sched
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    env_file: .env
    environment:
      _PIP_ADDITIONAL_REQUIREMENTS: "requests psycopg2-binary"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/scripts:/opt/airflow/scripts
    command: scheduler
    restart: always